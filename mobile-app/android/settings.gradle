pluginManagement {
  def reactNativeGradlePlugin = new File(
    providers.exec {
      workingDir(rootDir)
      commandLine("node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })")
    }.standardOutput.asText.get().trim()
  ).getParentFile().absolutePath
  includeBuild(reactNativeGradlePlugin)
  
  def expoPluginsPath = new File(
    providers.exec {
      workingDir(rootDir)
      commandLine("node", "--print", "require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })")
    }.standardOutput.asText.get().trim(),
    "../android/expo-gradle-plugin"
  ).absolutePath
  includeBuild(expoPluginsPath)
}

plugins {
  id("com.facebook.react.settings")
  id("expo-autolinking-settings")
}

extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {
    ex.autolinkLibrariesFromCommand()
  } else {
    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)
  }
}
expoAutolinking.useExpoModules()

rootProject.name = 'mobile-app'

expoAutolinking.useExpoVersionCatalog()

include ':app'


// ðŸ‘‡ Manual includes (for when Expo autolinking fails)
include(":react-native-gesture-handler")
project(":react-native-gesture-handler").projectDir = File(rootProject.projectDir, "../node_modules/react-native-gesture-handler/android")

include(":react-native-reanimated")
project(":react-native-reanimated").projectDir = File(rootProject.projectDir, "../node_modules/react-native-reanimated/android")

include(":react-native-screens")
project(":react-native-screens").projectDir = File(rootProject.projectDir, "../node_modules/react-native-screens/android")

include(":react-native-safe-area-context")
project(":react-native-safe-area-context").projectDir = File(rootProject.projectDir, "../node_modules/react-native-safe-area-context/android")

include(":react-native-vector-icons")
project(":react-native-vector-icons").projectDir = File(rootProject.projectDir, "../node_modules/react-native-vector-icons/android")

include(":react-native-svg")
project(":react-native-svg").projectDir = File(rootProject.projectDir, "../node_modules/react-native-svg/android")

include(":react-native-webview")
project(":react-native-webview").projectDir = File(rootProject.projectDir, "../node_modules/react-native-webview/android")

include(":react-native-maps")
project(":react-native-maps").projectDir = File(rootProject.projectDir, "../node_modules/react-native-maps/lib/android")

include(":react-native-get-random-values")
project(":react-native-get-random-values").projectDir = File(rootProject.projectDir, "../node_modules/react-native-get-random-values/android")

include(":async-storage")
project(":async-storage").projectDir = File(rootProject.projectDir, "../node_modules/@react-native-async-storage/async-storage/android")

include(":datetimepicker")
project(":datetimepicker").projectDir = File(rootProject.projectDir, "../node_modules/@react-native-community/datetimepicker/android")
